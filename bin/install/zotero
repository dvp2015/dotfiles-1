<<<<<<< HEAD
#!/bin/bash

. $HOME/.bash-functions.rc

# set -o errexit  # Exit when simple command fails               'set -e'                               
# set -o errtrace # Exit on error inside any functions or subshells.                                    
# set -o nounset  # Trigger error when expanding unset variables 'set -u'                                 
# set -o pipefail # Do not hide errors within pipes              'set -o pipefail'                      
# set -o xtrace   # Display expanded command and arguments       'set -x'                               

# define last version: https://github.com/dvershinin/lastversion
lastversion --version > /dev/null || pip install lastversion
version="$(lastversion zotero)"
file="Zotero-${version}_linux-x86_64.tar.bz2"
# https://www.zotero.org/download/client/dl?channel=release&platform=linux-x86_64&version=7.0.10
url="https://www.zotero.org/download/client/dl?channel=release&platform=linux-x86_64&version=$version"
dir="Zotero_linux-x86_64"

usage() {
cat <<EOF
    ./zotero [--force-download]

    Install Zotero.

    Argument "--force-download" - forces downloading the archive. 
EOF
}

backup() {
    [[ -d /opt/zotero ]] && mv /opt/zotero /opt/zotero.bak
}

clean() {
    rm -f $HOME/bin/zotero $HOME/.local/share/applications/zotero.desktop
}


# Install Zotero
# 
# Sequence:
#   Backup existing instance (/opt/zotero), if exists.
#   Install Zotero to /opt/zotero.
#   Create link ~/bin/zotero.
#   Create link to zotero.desktop.
#   Fix zotero.desktop
main() {
    local arg="$1"  # doesn't work with set -p nounset
    if [[ "$arg" == "-h" ]] || [[ "$arg" == "--help" ]]; then
        usage >&2
        exit 0
    fi
    backup
    clean
    mkdir -p ~/Downloads/install/zotero
    pushd ~/Downloads/install/zotero > /dev/null
    if [[ "$arg" == "--force-download" ]]; then
        rm -f $file
    fi
    #TODO: wget on amarano interrupts and breaks the file, check or load mannually
    [[ -f $file ]] || wget -O "$file" --retry-on-host-error "$url" || die "Cannot download $url" 
    tar jxvf "$file" || die "Cannot unpack file $file"
    [[ -d $dir ]] && mv "$dir" "/opt/zotero" || die "Directory $dir is not available"
    ln -s /opt/zotero/zotero $HOME/bin/zotero
    ln -s /opt/zotero/zotero.desktop $HOME/.local/share/applications/zotero.desktop
    popd > /dev/null
    # Fix zotero.desktop
    /opt/zotero/set_launcher_icon
	sed -i -e "s@^Exec=.*@Exec=/opt/zotero/zotero@" /opt/zotero/zotero.desktop
    success "Zotero $version is installed." >&2
}

main $@


# vim: set ts=4 sw=4 tw=92 ss=0 ft=sh et ai :
||||||| parent of a3e3f32 (feat: settings for hpc-002)
=======
#!/bin/bash

. $HOME/.bash-functions.rc

version="6.0.26"
file="Zotero-${version}_linux-x86_64.tar.bz2"
url="https://www.zotero.org/download/client/dl?channel=release&platform=linux-x86_64&version=$version"
dir="Zotero_linux-x86_64"


backup() {
    [[ -d /opt/zotero ]] && sudo mv /opt/zotero /opt/zotero.bak
}

clean() {
    rm -f $HOME/bin/zotero $HOME/.local/share/applications/zotero.desktop
}

main() {
    local usage = "
    ./zotero

    Backup existing instance, if exists.
    Install Zotero to /opt/zotero.
    Create link ~/bin/zotero.
    Create link to zotero.desktop.
    "
    if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        echo $usage
        exit 0
    fi
    backup
    clean
    mkdir -p ~/Downloads/install/zotero
    pushd ~/Downloads/install/zotero > /dev/null
    [[ -f $file ]] || wget "$url"
    [[ -f $file ]] && tar jxvf "$file" || die "Cannot find file $file"
    [[ -d $dir ]] && sudo mv "$dir" "/opt/zotero" || die "Directory $dir is not available"
    ln -s /opt/zotero/zotero $HOME/bin/zotero
    ln -s /opt/zotero/zotero.desktop $HOME/.local/share/applications/zotero.desktop
    popd > /dev/null
    success "Zoter $version is installed."
}

main $@


# vim: set ts=4 sw=4 tw=92 ss=0 ft=sh et ai :
>>>>>>> a3e3f32 (feat: settings for hpc-002)
