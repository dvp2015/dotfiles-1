# make less more friendly for non-text input files, see lesspipe(1)
test -x /usr/bin/lesspipe && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# History
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
# HISTCONTROL=ignoreboth
export HISTCONTROL=erasedups	# when adding an item to history, delete itentical commands upstream
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

HISTIGNORE="&:[bf]g:ll:lx:ls:lm:lk:l:la:lt:h:ev:ea:ek:pwd:exit:id:uptime:resize:clear:history"
export HISTIGNORE="$HISTIGNORE:mc:mcc:cs:cd .."

export QT_SELECT=5

if [[ -x /usr/games/fortune ]]; then
# https://askubuntu.com/questions/16428/showing-a-cowsay-fortune-in-every-new-terminal-session
  if [[ -x /usr/games/cowsay ]]; then
    fortune -s | cowsay -f `ls -1 /usr/share/cowsay/cows/ | sort -R | head -1` -n
  else
    /usr/games/fortune -s
  fi
  alias show_fortune='fortune -c -i -m ' # add regex patter to search after
fi

function rvm-prompt() {
    which python
}

# add ssh id to a console session
function sshid() {
    eval $(ssh-agent) && ssh-add
}

mydir () {
    local source="${BASH_SOURCE[0]}"
    while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
        DIR="$( cd -P "$( dirname "$source" )" >/dev/null 2>&1 && pwd )"
        source="$(readlink "$source")"
        [[ $source != /* ]] && source="$DIR/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    cd -P "$( dirname "$source" )" >/dev/null 2>&1 && pwd
}

# source /home/dvp/dev/vcpkg/scripts/vcpkg_completion.bash
